"""Add pgvector support and vector columns

Revision ID: 7b71b9a0ac9e
Revises:
Create Date: 2025-08-07 10:24:40.923634

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

try:
    from pgvector.sqlalchemy import Vector

    PGVECTOR_AVAILABLE = True
except ImportError:
    PGVECTOR_AVAILABLE = False


# revision identifiers, used by Alembic.
revision: str = "7b71b9a0ac9e"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # Enable pgvector extension
    op.execute("CREATE EXTENSION IF NOT EXISTS vector")

    # Add vector columns only if pgvector is available
    if PGVECTOR_AVAILABLE:
        op.add_column("contexts", sa.Column("embedding", Vector(1536), nullable=True))
        op.add_column(
            "conversations", sa.Column("embedding", Vector(1536), nullable=True)
        )
    else:
        # Fallback to TEXT columns
        op.add_column("contexts", sa.Column("embedding", sa.Text(), nullable=True))
        op.add_column("conversations", sa.Column("embedding", sa.Text(), nullable=True))


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("conversations", "embedding")
    op.drop_column("contexts", "embedding")
    # ### end Alembic commands ###
