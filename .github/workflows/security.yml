name: Security Audit

on:
  schedule:
    - cron: '0 3 * * 1'  # Run weekly on Monday at 3 AM
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'pyproject.toml'
      - 'uv.lock'
      - 'requirements.txt'

jobs:
  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Run safety check
        run: |
          uv add safety
          uv run safety check --json --output safety-report.json
        continue-on-error: true

      - name: Run pip-audit
        run: |
          uv add pip-audit
          uv run pip-audit --format=json --output=pip-audit-report.json
        continue-on-error: true

      - name: Upload security reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: dependency-security-reports
          path: |
            safety-report.json
            pip-audit-report.json

  container-security:
    name: Container Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build API image for scanning
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.production
          tags: hive-api:security-scan
          load: true

      - name: Run Trivy vulnerability scanner on API image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'hive-api:security-scan'
          format: 'sarif'
          output: 'trivy-api-results.sarif'

      - name: Build Agent image for scanning
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.agent
          tags: hive-agent:security-scan
          load: true

      - name: Run Trivy vulnerability scanner on Agent image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'hive-agent:security-scan'
          format: 'sarif'
          output: 'trivy-agent-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: trivy-api-results.sarif
          
      - name: Upload Trivy agent scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: trivy-agent-results.sarif

  secrets-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run GitLeaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_ENABLE_COMMENTS: false

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  notify-security:
    name: Notify Security Results
    runs-on: ubuntu-latest
    needs: [dependency-check, container-security, secrets-scan, code-quality]
    if: always()
    
    steps:
      - name: Notify security team
        if: contains(needs.*.result, 'failure')
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#security-alerts'
          webhook_url: ${{ secrets.SECURITY_SLACK_WEBHOOK }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
          text: 'Security vulnerability detected in LeanVibe Agent Hive'